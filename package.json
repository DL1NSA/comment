{
    "browser":         "./dist/web/extension.js",
    "description":     "",
    "displayName":     "Comment VI",
    "name":            "comment-vi",
    "publisher":       "karyfoundation",
    "version":         "0.0.1",
    "engines": {
        "vscode":      "^1.71.0"
    },
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "*"
    ],
    "contributes": {
        "configuration": {
            "title":       "Comment VI",
            "properties": {
                "comment.fancy": {
                    "default":         false,
                    "description":     "If set true, Renders a Decoration Ornament at the end of Line and Section comments.",
                    "type":            "boolean"
                },
                "comment.ornament": {
                    "default":         "âœ£",
                    "description":     "The Ornament used at the end of Section and line comments.",
                    "type":            "string"
                },
                "comment.rootCommentWidth": {
                    "default":         80,
                    "description":     "This is the length of the comment in the root indentation level. This also is the max length of the comments generated.",
                    "type":            "number"
                },
                "comment.indentationLevelWidthDifference": {
                    "default":         8,
                    "description":     "After each level of indentation the comment size is reduced by this amount. For example if you set your root comment size to 80, and then create a comment with two levels of indentation (two tabs behind it) the size of the comment will be: 80 - 2*8 = 64.",
                    "type":            "number"
                },
                "comment.codeStartsAtOneMoreLevelOfIndentation": {
                    "default":         false,
                    "description":     "If checked, the generator will create one more level of indentation in the additional whitespace that is created after the cursor so the code is kind of nested inside of the comment.",
                    "type":            "boolean"
                }
            }
        },
        "keybindings": [
            {
                "command":     "comment.vi.makeSectionComment",
                "key":         "alt+y",
                "when":        "editorTextFocus"
            },
            {
                "command":     "comment.vi.makeReverseSectionComment",
                "key":         "alt+m",
                "when":        "editorTextFocus"
            },
            {
                "command":     "comment.vi.makeLineComment",
                "key":         "alt+l",
                "when":        "editorTextFocus"
            }
        ],
        "commands": [
            {
                "command":     "comment.vi.renameSectionComment",
                "title":       "ðŸ§¨ Edit Section Comment"
            },
            {
                "command":     "comment.vi.makeSectionComment",
                "title":       "ðŸ”¨ Create Section Comment"
            },
            {
                "command":     "comment.vi.makeReverseSectionComment",
                "title":       "ðŸ”¨ Create Reverse Header Comment"
            },
            {
                "command":     "comment.vi.makeLineComment",
                "title":       "ðŸ”¨ Create Line Comment"
            }
        ],
        "menus": {
            "editor/context": [
                {
                    "command":     "comment.vi.makeSectionComment"
                },
                {
                    "command":     "comment.vi.renameSectionComment"
                },
                {
                    "command":     "comment.vi.makeLineComment"
                },
                {
                    "command":     "comment.vi.makeReverseSectionComment"
                }
            ]
        }
    },
    "scripts": {
        "compile-web":             "webpack",
        "lint":                    "eslint src --ext ts",
        "package-web":             "webpack --mode production --devtool hidden-source-map",
        "pretest":                 "yarn run compile-web",
        "run-in-browser":          "vscode-test-web --browserType=chromium --extensionDevelopmentPath=. .",
        "vscode:prepublish":       "yarn run package-web",
        "watch-web":               "webpack --watch"
    },
    "devDependencies": {
        "@types/mocha":                        "^9.1.1",
        "@types/vscode":                       "^1.71.0",
        "@types/webpack-env":                  "^1.17.0",
        "@typescript-eslint/eslint-plugin":    "^5.31.0",
        "@typescript-eslint/parser":           "^5.31.0",
        "@vscode/test-web":                    "^0.0.29",
        "assert":                              "^2.0.0",
        "eslint":                              "^8.20.0",
        "mocha":                               "^10.0.0",
        "process":                             "^0.11.10",
        "ts-loader":                           "^9.3.1",
        "typescript":                          "^4.7.4",
        "webpack":                             "^5.74.0",
        "webpack-cli":                         "^4.10.0"
    }
}